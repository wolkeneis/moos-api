/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/profile": {
    /** Get your own Profile, if you are logged in with a session cookie */
    post: operations["fetch-profile"];
    /** Update your own Profile information, if you are logged in with a session cookie */
    patch: operations["patch-profile"];
  };
  "/profile/file": {
    /** Request a pre-signed upload url for a file you want to upload, if you are logged in with a session cookie. */
    put: operations["put-profile-file"];
    /** Request a pre-signed download url for a file you want to download, if you are logged in with a session cookie. */
    post: operations["get-profile-file"];
    /** Delete the file selected with the id parameter, if you are logged in with a session cookie. */
    delete: operations["delete-profile-file"];
    /** Update the metadata of one of your files, if you are logged in with a session cookie. */
    patch: operations["patch-profile-file"];
    parameters: {};
  };
  "/profile/files": {
    /** Get a list of your own files, if you are logged in with a session cookie */
    post: operations["get-profile-files"];
  };
  "/csrf-token": {
    /** Endpoint for requesting the CSRF Token */
    get: operations["get-csrf-token"];
    /** Endpoint for testing the CSRF Token */
    post: operations["test-csrf-token"];
  };
  "/session": {
    /** Endpoint for requesting a session cookie */
    post: operations["request-session"];
    /** Endpoint for revoking a session cookie */
    delete: operations["revoke-session"];
  };
  "/application/profile": {
    /** Fetch profile associated with the bearer token. */
    get: operations["get-application-profile"];
  };
}

export interface components {
  schemas: {
    /** profile */
    UserProfile: {
      /** Format: uuid */
      uid: string;
      username: string;
      /** Format: uri */
      avatar: unknown;
      scopes: "*"[];
      /** @default false */
      private: boolean;
      providers?: components["schemas"]["ProviderProfile"][];
      applications: string[];
      /** Format: int64 */
      creationDate: number;
    };
    /** provider-profile */
    ProviderProfile: {
      /** @enum {string} */
      provider: "discord" | "google";
      providerId: string;
      username: string;
      /** Format: uri */
      avatar: unknown;
    };
    /** application */
    Application: {
      /** Format: uuid */
      id: string;
      name: string;
      /** Format: uri */
      redirectUri: string;
      /** Format: uuid */
      owner: string;
      /** @default false */
      trusted: boolean;
      /** Format: int64 */
      creationDate: number;
    };
    /** file */
    File: {
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      name: string;
      /** Format: uuid */
      owner: string;
      /** @default true */
      private: boolean;
      /** Format: int64 */
      size: number;
      /** Format: int64 */
      creationDate: number;
      /** Format: int64 */
      lastModified: number;
    };
  };
  requestBodies: {};
}

export interface operations {
  /** Get your own Profile, if you are logged in with a session cookie */
  "fetch-profile": {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfile"];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Invalid csrf token */
      403: unknown;
      /** Internal Server Error */
      500: unknown;
    };
  };
  /** Update your own Profile information, if you are logged in with a session cookie */
  "patch-profile": {
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          private?: boolean;
        };
      };
    };
  };
  /** Request a pre-signed upload url for a file you want to upload, if you are logged in with a session cookie. */
  "put-profile-file": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": {
            /** Format: uuid */
            id: string;
            /** Format: uri */
            url: string;
            /** Format: int64 */
            ttl: number;
          };
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Invalid CSRF Token */
      403: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          name: string;
          /** @default true */
          private?: boolean;
        };
      };
    };
  };
  /** Request a pre-signed download url for a file you want to download, if you are logged in with a session cookie. */
  "get-profile-file": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": {
            /** Format: uuid */
            id: string;
            /** Format: uri */
            url: string;
            /** Format: int64 */
            ttl: number;
          };
          "application/xml": components["schemas"]["File"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          id: string;
          /**
           * Format: int64
           * @default 14400
           */
          ttl?: number;
        };
      };
    };
  };
  /** Delete the file selected with the id parameter, if you are logged in with a session cookie. */
  "delete-profile-file": {
    parameters: {};
    responses: {
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Invalid CSRF Token */
      403: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          id: string;
        };
      };
    };
  };
  /** Update the metadata of one of your files, if you are logged in with a session cookie. */
  "patch-profile-file": {
    parameters: {};
    responses: {
      /** No Content */
      204: never;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          id?: string;
          private?: boolean;
          name?: string;
          required?: unknown;
        };
      };
    };
  };
  /** Get a list of your own files, if you are logged in with a session cookie */
  "get-profile-files": {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["File"][];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Internal Server Error */
      500: unknown;
    };
  };
  /** Endpoint for requesting the CSRF Token */
  "get-csrf-token": {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": {
            _csrf: string;
          };
        };
      };
    };
  };
  /** Endpoint for testing the CSRF Token */
  "test-csrf-token": {
    responses: {
      /** No Content */
      204: never;
      /** Invalid csrf token */
      403: unknown;
    };
  };
  /** Endpoint for requesting a session cookie */
  "request-session": {
    responses: {
      /** No Content */
      204: never;
      /** Bad Request */
      400: unknown;
      /** Invalid csrf token */
      403: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          token: string;
        };
      };
    };
  };
  /** Endpoint for revoking a session cookie */
  "revoke-session": {
    responses: {
      /** No Content */
      204: never;
      /** Invalid csrf token */
      403: unknown;
      /** Internal Server Error */
      500: unknown;
    };
  };
  /** Fetch profile associated with the bearer token. */
  "get-application-profile": {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfile"];
        };
      };
      /** Bad Request */
      400: unknown;
    };
  };
}

export interface external {}
