/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/profile": {
    /** Get your own Profile. */
    post: operations["fetch-profile"];
    /** Update your own Profile information. */
    patch: operations["patch-profile"];
  };
  "/profile/applications": {
    /** Get a list of your applications. */
    post: operations["post-profile-applications"];
    parameters: {};
  };
  "/profile/friends": {
    /** Get a list of your friends. */
    post: operations["post-profile-friends"];
    parameters: {};
  };
  "/profile/friend/{friendId}": {
    /** Begin a friendship. */
    put: operations["put-profile-friend"];
    /** End a friendship. */
    delete: operations["delete-profile-friend"];
    parameters: {
      path: {
        friendId: string;
      };
    };
  };
  "/profile/friend/{friendId}/applications": {
    /** Get a list of the applications of a friend, which you are allowed to see. */
    post: operations["post-profile-friend-applications"];
    parameters: {
      path: {
        friendId: string;
      };
    };
  };
  "/profile/friend/{friendId}/files": {
    /** Get a list of the files of a friend, which you are allowed to see. */
    post: operations["post-profile-friend-files"];
    parameters: {
      path: {
        friendId: string;
      };
    };
  };
  "/profile/friend/{friendId}/collections": {
    /** Get a list of the collections of a friend, which you are allowed to see. */
    post: operations["post-profile-friend-collections"];
    parameters: {
      path: {
        friendId: string;
      };
    };
  };
  "/profile/friend/{friendId}/friends": {
    /** Get a list of the friends of a friend, which you are allowed to see. */
    post: operations["post-profile-friend-friends"];
    parameters: {
      path: {
        friendId: string;
      };
    };
  };
  "/profile/files": {
    /** Get a list of your own files. */
    post: operations["post-profile-files"];
  };
  "/profile/file": {
    /** Request a pre-signed upload url for a file you want to upload, if you are logged in with a session cookie. */
    put: operations["put-profile-file"];
    /** Request a pre-signed download url for a file you want to download, if you are logged in with a session cookie. */
    post: operations["post-profile-file"];
    /** Delete the file selected with the id parameter, if you are logged in with a session cookie. */
    delete: operations["delete-profile-file"];
    /** Update the metadata of one of your files, if you are logged in with a session cookie. */
    patch: operations["patch-profile-file"];
    parameters: {};
  };
  "/profile/collections": {
    /** Get a list of your own files. */
    post: operations["post-profile-collections"];
    parameters: {};
  };
  "/profile/collection": {
    put: operations["put-profile-collection"];
    post: operations["post-profile-collection"];
    delete: operations["delete-profile-collection"];
    patch: operations["patch-profile-collection"];
  };
  "/profile/season": {
    put: operations["put-profile-season"];
    post: operations["post-profile-season"];
    delete: operations["delete-profile-season"];
    patch: operations["patch-profile-season"];
    parameters: {};
  };
  "/profile/episode": {
    put: operations["put-profile-episode"];
    post: operations["post-profile-episode"];
    delete: operations["delete-profile-episode"];
    patch: operations["patch-profile-episode"];
    parameters: {};
  };
  "/profile/source": {
    put: operations["put-profile-source"];
    post: operations["post-profile-source"];
    delete: operations["delete-profile-source"];
    patch: operations["patch-profile-source"];
    parameters: {};
  };
  "/csrf-token": {
    /** Endpoint for requesting the CSRF Token */
    get: operations["get-csrf-token"];
    /** Endpoint for testing the CSRF Token */
    post: operations["test-csrf-token"];
  };
  "/session": {
    /** Endpoint for requesting a session cookie */
    post: operations["request-session"];
    /** Endpoint for revoking a session cookie */
    delete: operations["revoke-session"];
  };
  "/application/profile": {
    /** Fetch profile associated with the bearer token. */
    get: operations["get-application-profile"];
  };
}

export interface components {
  schemas: {
    /** profile */
    UserProfile: {
      /** Format: uuid */
      uid: string;
      username: string;
      /** Format: uri */
      avatar: unknown;
      scopes: "*"[];
      /** @default false */
      private: boolean;
      providers?: components["schemas"]["ProviderProfile"][];
      /** Format: int64 */
      creationDate: number;
    };
    /** friend */
    Friend: {
      /** Format: uuid */
      uid: string;
      username: string;
      /** Format: uri */
      avatar: unknown;
      scopes?: "*"[];
      /** @default false */
      private: boolean;
      consensual: boolean;
      /** Format: int64 */
      creationDate: number;
    };
    /** provider-profile */
    ProviderProfile: {
      /** @enum {string} */
      provider: "discord" | "google";
      providerId: string;
      username: string;
      /** Format: uri */
      avatar: unknown;
    };
    /** application */
    Application: {
      /** Format: uuid */
      id: string;
      name: string;
      /** Format: uri */
      redirectUri: string;
      /** Format: uuid */
      owner: string;
      /** @default false */
      trusted: boolean;
      /** Format: int64 */
      creationDate: number;
    };
    /** file */
    File: {
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      name: string;
      /** Format: uuid */
      owner: string;
      /** @default true */
      private: boolean;
      /** Format: int64 */
      size: number;
      /** Format: int64 */
      creationDate: number;
      /** Format: int64 */
      lastModified: number;
    };
    /** episode */
    Episode: {
      /** Format: uuid */
      seasonId: string;
      /** Format: uuid */
      id: string;
      index: number;
      name: string;
      sources: components["schemas"]["Source"][];
      /** Format: int64 */
      creationDate: number;
    };
    /** source */
    Source: {
      /** Format: uuid */
      seasonId: string;
      /** Format: uuid */
      episodeId: string;
      /** Format: uuid */
      id: string;
      language: components["schemas"]["Language"];
      name?: string;
      /** Format: uri */
      url?: string;
      /** Format: uuid */
      key?: string;
      subtitles?: components["schemas"]["Language"];
      /** Format: int64 */
      creationDate: number;
    };
    /**
     * language
     * @default en_EN
     * @example de_DE
     * @enum {string}
     */
    Language: "en_EN" | "de_DE" | "ja_JP" | "zh_CN";
    /** season */
    Season: {
      /** Format: uuid */
      collectionId: string;
      /** Format: uuid */
      id: string;
      index: number;
      episodes: components["schemas"]["Episode"][];
      languages: components["schemas"]["Language"][];
      subtitles: components["schemas"]["Language"][];
    };
    /** collection */
    Collection: {
      /** Format: uuid */
      id: string;
      name: string;
      /**
       * @default private
       * @enum {string}
       */
      visibility: "private" | "public" | "unlisted";
      seasons: components["schemas"]["Season"][];
      owner: string;
      /** Format: int64 */
      creationDate: number;
    };
    /** collection-preview */
    CollectionPreview: {
      /** Format: uuid */
      id: string;
      name: string;
      /**
       * @default private
       * @enum {string}
       */
      visibility: "private" | "public" | "unlisted";
      seasons: string[];
      /** Format: uri */
      thumbnail?: string;
      owner: string;
      /** Format: int64 */
      creationDate: number;
    };
  };
  requestBodies: {};
}

export interface operations {
  /** Get your own Profile. */
  "fetch-profile": {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfile"];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Invalid csrf token */
      403: unknown;
      /** Internal Server Error */
      500: unknown;
    };
  };
  /** Update your own Profile information. */
  "patch-profile": {
    responses: {
      /** OK */
      200: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          private?: boolean;
        };
      };
    };
  };
  /** Get a list of your applications. */
  "post-profile-applications": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Application"][];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Internal Server Error */
      500: unknown;
    };
  };
  /** Get a list of your friends. */
  "post-profile-friends": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Friend"][];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Internal Server Error */
      500: unknown;
    };
  };
  /** Begin a friendship. */
  "put-profile-friend": {
    parameters: {
      path: {
        friendId: string;
      };
    };
    responses: {
      /** Created */
      201: unknown;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Invalid CSRF Token */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
  };
  /** End a friendship. */
  "delete-profile-friend": {
    parameters: {
      path: {
        friendId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Invalid CSRF Token */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
  };
  /** Get a list of the applications of a friend, which you are allowed to see. */
  "post-profile-friend-applications": {
    parameters: {
      path: {
        friendId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Application"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
  };
  /** Get a list of the files of a friend, which you are allowed to see. */
  "post-profile-friend-files": {
    parameters: {
      path: {
        friendId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["File"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
  };
  /** Get a list of the collections of a friend, which you are allowed to see. */
  "post-profile-friend-collections": {
    parameters: {
      path: {
        friendId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["CollectionPreview"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
  };
  /** Get a list of the friends of a friend, which you are allowed to see. */
  "post-profile-friend-friends": {
    parameters: {
      path: {
        friendId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Friend"][];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
  };
  /** Get a list of your own files. */
  "post-profile-files": {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["File"][];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Internal Server Error */
      500: unknown;
    };
  };
  /** Request a pre-signed upload url for a file you want to upload, if you are logged in with a session cookie. */
  "put-profile-file": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": {
            /** Format: uuid */
            id: string;
            /** Format: uri */
            url: string;
            /** Format: int64 */
            ttl: number;
          };
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Invalid CSRF Token */
      403: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          name: string;
          /** @default true */
          private?: boolean;
        };
      };
    };
  };
  /** Request a pre-signed download url for a file you want to download, if you are logged in with a session cookie. */
  "post-profile-file": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": {
            /** Format: uuid */
            id: string;
            /** Format: uri */
            url: string;
            /** Format: int64 */
            ttl: number;
          };
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          id: string;
          /**
           * Format: int64
           * @default 14400
           */
          ttl?: number;
        };
      };
    };
  };
  /** Delete the file selected with the id parameter, if you are logged in with a session cookie. */
  "delete-profile-file": {
    parameters: {};
    responses: {
      /** No Content */
      204: never;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Invalid CSRF Token */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          id: string;
        };
      };
    };
  };
  /** Update the metadata of one of your files, if you are logged in with a session cookie. */
  "patch-profile-file": {
    parameters: {};
    responses: {
      /** No Content */
      204: never;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          id: string;
          private?: boolean;
          name?: string;
        };
      };
    };
  };
  /** Get a list of your own files. */
  "post-profile-collections": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["CollectionPreview"][];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Internal Server Error */
      500: unknown;
    };
  };
  "put-profile-collection": {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Collection"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          name: string;
          /**
           * @default private
           * @enum {string}
           */
          visibility?: "private" | "public" | "unlisted";
          /** Format: uuid */
          thumbnail?: string;
        };
      };
    };
  };
  "post-profile-collection": {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Collection"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          id: string;
        };
      };
    };
  };
  "delete-profile-collection": {
    responses: {
      /** No Content */
      204: never;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          id: string;
        };
      };
    };
  };
  "patch-profile-collection": {
    responses: {
      /** No Content */
      204: never;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          id: string;
          name?: string;
          /** @enum {string} */
          visibility?: "public" | "private" | "unlisted";
          /** Format: uuid */
          thumbnail?: string;
        };
      };
    };
  };
  "put-profile-season": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Season"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          collectionId: string;
          index: number;
        };
      };
    };
  };
  "post-profile-season": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Season"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          id: string;
        };
      };
    };
  };
  "delete-profile-season": {
    parameters: {};
    responses: {
      /** No Content */
      204: never;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          id: string;
        };
      };
    };
  };
  "patch-profile-season": {
    parameters: {};
    responses: {
      /** No Content */
      204: never;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          id: string;
          index?: number;
        };
      };
    };
  };
  "put-profile-episode": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Episode"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          seasonId: string;
          index: number;
          name: string;
        };
      };
    };
  };
  "post-profile-episode": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Episode"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          seasonId: string;
          /** Format: uuid */
          id: string;
        };
      };
    };
  };
  "delete-profile-episode": {
    parameters: {};
    responses: {
      /** No Content */
      204: never;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          seasonId: string;
          /** Format: uuid */
          id: string;
        };
      };
    };
  };
  "patch-profile-episode": {
    parameters: {};
    responses: {
      /** No Content */
      204: never;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          seasonId: string;
          /** Format: uuid */
          id: string;
          index?: number;
          name?: string;
        };
      };
    };
  };
  "put-profile-source": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["Source"];
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          seasonId: string;
          /** Format: uuid */
          episodeId: string;
          language: components["schemas"]["Language"];
          name?: string;
          /** Format: uri */
          url?: string;
          /** Format: uuid */
          key?: string;
          subtitles?: components["schemas"]["Language"];
        };
      };
    };
  };
  "post-profile-source": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": {
            /** Format: uri */
            url: string;
          };
        };
      };
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          id: string;
        };
      };
    };
  };
  "delete-profile-source": {
    parameters: {};
    responses: {
      /** No Content */
      204: never;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          seasonId: string;
          /** Format: uuid */
          episodeId: string;
          /** Format: uuid */
          id: string;
        };
      };
    };
  };
  "patch-profile-source": {
    parameters: {};
    responses: {
      /** No Content */
      204: never;
      /** Bad Request */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
      /** Internal Server Error */
      500: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          /** Format: uuid */
          seasonId: string;
          /** Format: uuid */
          episodeId: string;
          /** Format: uuid */
          id: string;
          language?: components["schemas"]["Language"];
          name?: string;
          /** Format: uri */
          url?: string;
          /** Format: uuid */
          key?: string;
          subtitles?: components["schemas"]["Language"];
        };
      };
    };
  };
  /** Endpoint for requesting the CSRF Token */
  "get-csrf-token": {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": {
            _csrf: string;
          };
        };
      };
    };
  };
  /** Endpoint for testing the CSRF Token */
  "test-csrf-token": {
    responses: {
      /** No Content */
      204: never;
      /** Invalid csrf token */
      403: unknown;
    };
  };
  /** Endpoint for requesting a session cookie */
  "request-session": {
    responses: {
      /** No Content */
      204: never;
      /** Bad Request */
      400: unknown;
      /** Invalid csrf token */
      403: unknown;
    };
    requestBody: {
      content: {
        "application/json": {
          token: string;
        };
      };
    };
  };
  /** Endpoint for revoking a session cookie */
  "revoke-session": {
    responses: {
      /** No Content */
      204: never;
      /** Invalid csrf token */
      403: unknown;
      /** Internal Server Error */
      500: unknown;
    };
  };
  /** Fetch profile associated with the bearer token. */
  "get-application-profile": {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfile"];
        };
      };
      /** Bad Request */
      400: unknown;
    };
  };
}

export interface external {}
