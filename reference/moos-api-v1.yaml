openapi: 3.1.0
info:
  title: moos-api
  version: '1.0'
  license:
    name: GPL 3.0
    url: 'https://www.gnu.org/licenses/gpl-3.0.html'
  contact:
    name: Admin
    email: admin@wolkeneis.dev
    url: 'https://wolkeneis.dev/contact'
  termsOfService: 'https://wolkeneis.dev/privacy'
  description: Moos API 1.0
servers:
  - url: 'https://moos.wolkeneis.dev/api/v1'
    description: V1 Endpoint
tags:
  - name: client
    description: Public Client API
  - name: csrf-token
    description: CSRF Token API (only for wolkeneis.dev frontend)
  - name: profile
    description: Profile API (only for wolkeneis.dev frontend)
  - name: session
    description: Session API (only for wolkeneis.dev frontend)
paths:
  /profile:
    post:
      tags:
        - profile
      summary: Fetch Profile
      operationId: fetch-profile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '403':
          description: Invalid csrf token
        '500':
          description: Internal Server Error
      security:
        - CSRF-Token: []
        - session: []
      description: 'Get your own Profile, if you are logged in with a session cookie'
    patch:
      tags:
        - profile
      summary: Patch Profile
      operationId: patch-profile
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      security:
        - CSRF-Token: []
        - session: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                private:
                  type: boolean
      description: 'Update your own Profile information, if you are logged in with a session cookie'
  /csrf-token:
    get:
      tags:
        - csrf-token
      summary: ''
      operationId: get-csrf-token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _csrf:
                    type: string
                required:
                  - _csrf
      description: Endpoint for requesting the CSRF Token
    post:
      tags:
        - csrf-token
      summary: ''
      operationId: test-csrf-token
      responses:
        '204':
          description: No Content
        '403':
          description: Invalid csrf token
      security:
        - CSRF-Token: []
      description: Endpoint for testing the CSRF Token
  /session:
    post:
      tags:
        - session
      summary: ''
      operationId: request-session
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Invalid csrf token
      description: Endpoint for requesting a session cookie
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                token:
                  type: string
              required:
                - token
        description: ''
      security:
        - CSRF-Token: []
    delete:
      tags:
        - session
      summary: ''
      operationId: revoke-session
      responses:
        '204':
          description: No Content
        '403':
          description: Invalid csrf token
        '500':
          description: Internal Server Error
      description: Endpoint for revoking a session cookie
      security:
        - session: []
        - CSRF-Token: []
  /client/profile:
    post:
      summary: Fetch User Profile
      operationId: post-client-profile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: Bad Request
      security:
        - oauth2:
            - '*'
        - bearer: []
      description: Fetch profile associated with the bearer token.
components:
  schemas:
    UserProfile:
      type: object
      title: Profile
      additionalProperties: false
      examples:
        - uid: string
          username: string
          avatar: 'http://example.com'
          scopes:
            - '*'
          private: true
          clients:
            - {}
          creationDate: 0
      properties:
        uid:
          type: string
        username:
          type: string
        avatar:
          type:
            - string
            - 'null'
          format: uri
        scopes:
          type: array
          items:
            type: string
            enum:
              - '*'
        private:
          type: boolean
        providers:
          type: array
          items:
            $ref: '#/components/schemas/ProviderProfile'
        clients:
          type: array
          items:
            type: string
        creationDate:
          type: integer
          format: int64
      required:
        - uid
        - username
        - avatar
        - scopes
        - private
        - clients
        - creationDate
    ProviderProfile:
      type: object
      title: provider-profile
      additionalProperties: false
      properties:
        provider:
          type: string
          enum:
            - discord
            - google
        providerId:
          type: string
        username:
          type: string
        avatar:
          type:
            - string
            - 'null'
          format: uri
      required:
        - provider
        - providerId
        - username
        - avatar
    Client:
      type: object
      title: client
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        redirectUri:
          type: string
          format: uri
        owner:
          type: string
        trusted:
          type: boolean
          default: false
        creationDate:
          type: integer
          format: int64
      required:
        - id
        - name
        - redirectUri
        - owner
        - trusted
        - creationDate
  securitySchemes:
    CSRF-Token:
      type: apiKey
      in: header
      name: CSRF-Token
    session:
      name: session
      type: apiKey
      in: cookie
      description: Session Cookie
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          tokenUrl: 'https://moos.wolkeneis.dev/oauth2/token'
          refreshUrl: 'https://moos.wolkeneis.dev/oauth2/refresh'
          scopes:
            '*': ''
          authorizationUrl: 'https://moos.wolkeneis.dev/oauth2/authorize'
        implicit:
          authorizationUrl: 'https://moos.wolkeneis.dev/oauth2/authorize'
          scopes:
            '*': ''
          refreshUrl: 'https://moos.wolkeneis.dev/oauth2/refresh'
    bearer:
      type: http
      scheme: bearer
  requestBodies: {}
