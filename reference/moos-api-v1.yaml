openapi: 3.1.0
info:
  title: moos-api
  version: "1.0"
  license:
    name: GPL 3.0
    url: "https://www.gnu.org/licenses/gpl-3.0.html"
  contact:
    name: Admin
    email: admin@wolkeneis.dev
    url: "https://wolkeneis.dev/contact"
  termsOfService: "https://wolkeneis.dev/privacy"
  description: Moos API 1.0
servers:
  - url: "https://moos.wolkeneis.dev/api/v1"
    description: V1 Endpoint
tags:
  - name: application
    description: Public Application API
  - name: csrf-token
    description: CSRF Token API (only for wolkeneis.dev frontend)
  - name: profile
    description: Profile API (only for wolkeneis.dev frontend)
  - name: session
    description: Session API (only for wolkeneis.dev frontend)
paths:
  /profile:
    post:
      tags:
        - profile
      summary: Fetch Profile
      operationId: fetch-profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "401":
          description: Unauthorized
        "403":
          description: Invalid csrf token
        "500":
          description: Internal Server Error
      security:
        - CSRF-Token: []
        - session: []
      description: Get your own Profile.
    patch:
      tags:
        - profile
      summary: Patch Profile
      operationId: patch-profile
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
        - CSRF-Token: []
        - session: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                private:
                  type: boolean
      description: Update your own Profile information.
  /profile/applications:
    post:
      summary: Fetch Applications
      tags:
        - profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Application"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      operationId: post-profile-applications
      security:
        - CSRF-Token: []
        - session: []
      description: Get a list of your applications.
    parameters: []
  /profile/friends:
    post:
      summary: Fetch Profile of a friend
      tags:
        - profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Friend"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      operationId: post-profile-friends
      security:
        - CSRF-Token: []
        - session: []
      description: Get a list of your friends.
    parameters: []
  "/profile/friend/{friendId}":
    parameters:
      - schema:
          type: string
          format: uuid
        name: friendId
        in: path
        required: true
    delete:
      summary: Remove Friend
      operationId: delete-profile-friend
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Invalid CSRF Token
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - CSRF-Token: []
        - session: []
      description: End a friendship.
      tags:
        - profile
    put:
      summary: Add Friend
      operationId: put-profile-friend
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Invalid CSRF Token
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - CSRF-Token: []
        - session: []
      description: Begin a friendship.
      tags:
        - profile
  "/profile/friend/{friendId}/applications":
    post:
      summary: List all Applications of a friend
      tags:
        - profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Application"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      operationId: post-profile-friend-applications
      description: "Get a list of the applications of a friend, which you are allowed to see."
      security:
        - CSRF-Token: []
        - session: []
    parameters:
      - schema:
          type: string
        name: friendId
        in: path
        required: true
  "/profile/friend/{friendId}/files":
    post:
      summary: List all Files of a friend
      tags:
        - profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/File"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      operationId: post-profile-friend-files
      description: "Get a list of the files of a friend, which you are allowed to see."
      security:
        - CSRF-Token: []
        - session: []
    parameters:
      - schema:
          type: string
        name: friendId
        in: path
        required: true
  "/profile/friend/{friendId}/friends":
    post:
      summary: List all Friends of a friend
      tags:
        - profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Friend"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      operationId: post-profile-friend-friends
      description: "Get a list of the friends of a friend, which you are allowed to see."
      security:
        - CSRF-Token: []
        - session: []
    parameters:
      - schema:
          type: string
        name: friendId
        in: path
        required: true
  /profile/files:
    post:
      summary: List all Files
      tags:
        - profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/File"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      operationId: post-profile-files
      description: Get a list of your own files.
      security:
        - CSRF-Token: []
        - session: []
  /profile/file:
    post:
      summary: Get File
      tags:
        - profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  id:
                    type: string
                    format: uuid
                  url:
                    type: string
                    format: uri
                  ttl:
                    type: integer
                    format: int64
                required:
                  - id
                  - url
                  - ttl
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      operationId: post-profile-file
      security:
        - CSRF-Token: []
        - session: []
      description: "Request a pre-signed download url for a file you want to download, if you are logged in with a session cookie."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                id:
                  type: string
                  format: uuid
                ttl:
                  type: integer
                  minimum: 60
                  maximum: 43200
                  multipleOf: 60
                  format: int64
                  default: 14400
              required:
                - id
    delete:
      summary: Delete File
      operationId: delete-profile-file
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Invalid CSRF Token
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - CSRF-Token: []
        - session: []
      description: "Delete the file selected with the id parameter, if you are logged in with a session cookie."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                id:
                  type: string
                  format: uuid
              required:
                - id
      tags:
        - profile
    put:
      summary: Create File
      operationId: put-profile-file
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                private:
                  type: boolean
                  default: true
              required:
                - name
        description: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  id:
                    type: string
                    format: uuid
                  url:
                    type: string
                    format: uri
                  ttl:
                    type: integer
                    format: int64
                required:
                  - id
                  - url
                  - ttl
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Invalid CSRF Token
        "500":
          description: Internal Server Error
      security:
        - CSRF-Token: []
        - session: []
      description: "Request a pre-signed upload url for a file you want to upload, if you are logged in with a session cookie."
      tags:
        - profile
    patch:
      tags:
        - profile
      summary: Patch File Metadata
      operationId: patch-profile-file
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - CSRF-Token: []
        - session: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                id:
                  type: string
                  format: uuid
                private:
                  type: boolean
                name:
                  type: string
              required:
                - id
      description: "Update the metadata of one of your files, if you are logged in with a session cookie."
    parameters: []
  /csrf-token:
    get:
      tags:
        - csrf-token
      summary: Request CSRF-Token
      operationId: get-csrf-token
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _csrf:
                    type: string
                required:
                  - _csrf
      description: Endpoint for requesting the CSRF Token
    post:
      tags:
        - csrf-token
      summary: Test CSRF-Token
      operationId: test-csrf-token
      responses:
        "204":
          description: No Content
        "403":
          description: Invalid csrf token
      security:
        - CSRF-Token: []
      description: Endpoint for testing the CSRF Token
  /session:
    post:
      tags:
        - session
      summary: Request Session
      operationId: request-session
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "403":
          description: Invalid csrf token
      description: Endpoint for requesting a session cookie
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                token:
                  type: string
              required:
                - token
        description: ""
      security:
        - CSRF-Token: []
    delete:
      tags:
        - session
      summary: Revoke Session
      operationId: revoke-session
      responses:
        "204":
          description: No Content
        "403":
          description: Invalid csrf token
        "500":
          description: Internal Server Error
      description: Endpoint for revoking a session cookie
      security:
        - session: []
        - CSRF-Token: []
  /application/profile:
    get:
      summary: Fetch User Profile
      operationId: get-application-profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "400":
          description: Bad Request
      security:
        - oauth2:
            - identify
            - "*"
        - bearer: []
      description: Fetch profile associated with the bearer token.
      tags:
        - application
components:
  schemas:
    UserProfile:
      type: object
      title: profile
      additionalProperties: false
      examples:
        - uid: string
          username: string
          avatar: "http://example.com"
          scopes:
            - "*"
          private: true
          applications:
            - {}
          creationDate: 0
      properties:
        uid:
          type: string
          format: uuid
        username:
          type: string
        avatar:
          type:
            - string
            - "null"
          format: uri
        scopes:
          type: array
          items:
            type: string
            enum:
              - "*"
        private:
          type: boolean
          default: false
        providers:
          type: array
          items:
            $ref: "#/components/schemas/ProviderProfile"
        creationDate:
          type: integer
          format: int64
      required:
        - uid
        - username
        - avatar
        - scopes
        - private
        - creationDate
    Friend:
      type: object
      title: friend
      additionalProperties: false
      examples:
        - uid: string
          username: string
          avatar: "http://example.com"
          scopes:
            - "*"
          private: true
          applications:
            - {}
          creationDate: 0
      properties:
        uid:
          type: string
          format: uuid
        username:
          type: string
        avatar:
          type:
            - string
            - "null"
          format: uri
        scopes:
          type: array
          items:
            type: string
            enum:
              - "*"
        private:
          type: boolean
          default: false
        consensual:
          type: boolean
        creationDate:
          type: integer
          format: int64
      required:
        - uid
        - username
        - avatar
        - private
        - consensual
        - creationDate
    ProviderProfile:
      type: object
      title: provider-profile
      additionalProperties: false
      properties:
        provider:
          type: string
          enum:
            - discord
            - google
        providerId:
          type: string
        username:
          type: string
        avatar:
          type:
            - string
            - "null"
          format: uri
      required:
        - provider
        - providerId
        - username
        - avatar
    Application:
      type: object
      title: application
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        redirectUri:
          type: string
          format: uri
        owner:
          type: string
          format: uuid
        trusted:
          type: boolean
          default: false
        creationDate:
          type: integer
          format: int64
      required:
        - id
        - name
        - redirectUri
        - owner
        - trusted
        - creationDate
    File:
      type: object
      title: file
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          format: uuid
        owner:
          type: string
          format: uuid
        private:
          type: boolean
          default: true
        size:
          type: integer
          format: int64
        creationDate:
          type: integer
          format: int64
        lastModified:
          type: integer
          format: int64
      required:
        - id
        - name
        - owner
        - private
        - size
        - creationDate
        - lastModified
  securitySchemes:
    CSRF-Token:
      type: apiKey
      in: header
      name: CSRF-Token
    session:
      name: session
      type: apiKey
      in: cookie
      description: Session Cookie
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          tokenUrl: "https://moos.wolkeneis.dev/oauth2/token"
          refreshUrl: "https://moos.wolkeneis.dev/oauth2/refresh"
          scopes:
            identify: ""
            "*": ""
            files: ""
          authorizationUrl: "https://moos.wolkeneis.dev/oauth2/authorize"
        implicit:
          authorizationUrl: "https://moos.wolkeneis.dev/oauth2/authorize"
          scopes:
            identify: ""
            "*": ""
            files: ""
          refreshUrl: "https://moos.wolkeneis.dev/oauth2/refresh"
    bearer:
      type: http
      scheme: bearer
  requestBodies: {}
